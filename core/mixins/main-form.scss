@use '../variables/colors' as *;
@use '../variables/button' as b;
@use 'breakpoint' as *;
@use 'button' as *;
@use 'heading' as *;
@use 'text' as *;
@use 'forms/text-input' as *;
@use 'ui-border' as *;
@use 'check-list' as *;

@mixin main-form(
	$container-width: 980px,
	$background: 'header-dark',
	$button-size: 'bg',
	$button-style: 'button-orange',
	$ui-border: 'md',
	$ellipse: true,
	$border-line: false,
	$availableFor: true,
	$checkList: true
) {
	@include ui-border($ui-border);
	background: map-get($colors, $background);
	position: relative;
	padding: 80px 50px;
	overflow: hidden;

	@include breakpointUi(lt-md) {
		padding: 60px 20px;
	}
	@if $ellipse == true {
		.ellipse {
			--el-size: 700px;
			$size: 700px;
			top: unset;
			position: absolute;
			background: -moz-radial-gradient(center, ellipse cover, #59a8f1 0%, rgba(229, 229, 229, 0) 70%);
			background: -webkit-radial-gradient(center, ellipse cover, #59a8f1 0%, rgba(229, 229, 229, 0) 70%);
			background: radial-gradient(ellipse at center, #59a8f1 0%, rgba(229, 229, 229, 0) 70%);
			opacity: 0.4;
			z-index: 1;

			&.el_left {
				width: var(--el-size);
				height: var(--el-size);
				top: 0;
				left: -50%;
				transform: translate(50%, -50%);

				@include breakpointUi(md) {
					transform: translate(0, -50%);
				}

				@include breakpointUi(lt-md) {
					--el-size: 500px;
					width: var(--el-size);
					height: var(--el-size);
					top: unset;
					bottom: -40%;
					left: -40%;
					transform: none;
				}
			}

			&.el_right {
				width: var(--el-size);
				height: var(--el-size);
				bottom: 0;
				right: -50%;
				transform: translate(-50%, 50%);

				@include breakpointUi(md) {
					transform: translate(0, 50%);
				}

				@include breakpointUi(lt-md) {
					--el-size: 500px;
					width: var(--el-size);
					height: var(--el-size);
					bottom: unset;
					right: -40%;
					top: -40%;
					transform: none;
				}
			}
		}
	}

	&-container {
		margin: 0 auto;
		max-width: $container-width;

		* {
			z-index: 50;
			position: relative;
		}

		.title {
			--margin-bottom: 10px;
			@include heading('2');
			color: map-get($colors, 'white');
			text-align: center;
			margin: 0 auto var(--margin-bottom);

			@include breakpointUi(lt-md) {
				@include heading('3');
				margin-bottom: var(--margin-bottom);
				text-align: left;
			}
		}

		.sub {
			@include text('white', 'xxl');
			text-align: center;
			margin: 0 auto 30px;

			@include breakpointUi(md) {
				@include text('white', 'xxxl');
			}

			@include breakpointUi(lt-md) {
				@include text('white', 'lg');
				text-align: left;
				max-width: revert;
			}
		}

		.description {
			@include text('secondary-light', 'bg');
			text-align: center;
			margin-bottom: 40px;
			@include breakpointUi(lt-md) {
				@include text('secondary-light', 'sm');
				text-align: left;
			}
		}

		.form__items {
			margin: 0 auto 10px;

			@include breakpointUi(lt-md) {
				margin: 0 auto 20px;
			}

			.index-form {
				display: flex;
				justify-content: center;

				@include breakpointUi(lt-md) {
					flex-direction: column;
				}
			}

			.form_button {
				border-top-left-radius: 0;
				border-bottom-left-radius: 0;

				@include breakpointUi(lt-md) {
					border-radius: 5px;
				}
			}

			.form-group_styled {
				width: 100%;
				max-width: 320px;

				@include breakpointUi(lt-md) {
					max-width: revert;
					margin-bottom: 0;
				}

				input {
					@include textInput('bg');
					border-top-right-radius: 0;
					border-bottom-right-radius: 0;

					@include breakpointUi(lt-md) {
						@include textInput('md');
					}
				}

				div[data-ng-show="errors['downloadform-email']"] {
					min-height: 20px;
					height: auto;
					display: block !important;
					text-align: left;
				}

				.div {
					min-height: 10px;
					height: auto;
					margin-top: 5px;
					display: block !important;

					@include breakpointUi(lt-md) {
						min-height: 10px;
						margin-top: 0;
						margin-bottom: 10px;
					}
				}

				&.has-error {
					input {
						@include textInput('bg', 'error');
						border-top-right-radius: 0;
						border-bottom-right-radius: 0;

						@include breakpointUi(lt-md) {
							@include textInput('md', 'error');
						}
					}

					.help-block {
						display: block;
						@include text('error', 'sm');
					}
				}
			}
		}

		@if $availableFor == false {
			.application-sub {
				display: none;
			}
		}
		@if $availableFor == true {
			.application-sub {
				align-items: center;
				justify-content: center;
				display: flex;
			}
		}

		@if $checkList == false {
			.check_list {
				display: none;
			}
		}
		// container end
	}
	.bottom-form {
		h2 {
			margin: 0 auto var(--margin-bottom);

			span {
				display: block;
			}
		}
		@if $border-line == true {
			.form_button {
				@if $button-size == 'bg' {
					@include button($button-size, $button-style, $border-line);
					@include breakpointUi(lt-md) {
						@include button('md', $button-style, $border-line);
					}
				}
			}
		}

		@if $border-line == false {
			.form_button {
				@if $button-size == 'bg' {
					@include button($button-size, $button-style, $border-line);
					@include breakpointUi(lt-md) {
						@include button('md', $button-style, $border-line);
					}
				}
			}
		}
		.form_button {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;

			@include breakpointUi(lt-md) {
				border-radius: 5px;
			}
		}
	}
	// mixin end
}
